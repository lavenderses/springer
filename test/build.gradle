plugins {
    id 'war'
    id 'org.gretty' version '3.0.7'
}

war {
    dependsOn jar
}

sourceSets {
    integration {
        resources.srcDir "$projectDir/src/integration/resources"
        compileClasspath += main.output + test.output
        runtimeClasspath += main.output + test.output
    }
}

configurations {
    integrationImplementation.extendsFrom testImplementation
    integrationRuntimeOnly.extendsFrom testRuntimeOnly
}

dependencies {
    implementation 'org.springframework:spring-webmvc:5.3.16'
    implementation 'org.slf4j:jcl-over-slf4j:2.0.0-alpha6'
    implementation 'org.slf4j:slf4j-nop:2.0.0-alpha6'
    implementation 'javax.servlet:javax.servlet-api:4.0.1'
    implementation 'javax.validation:validation-api:2.0.1.Final'
    implementation 'org.hibernate.validator:hibernate-validator:6.1.7.Final'

    testImplementation 'ch.qos.logback:logback-classic:1.3.0-alpha14'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testImplementation 'org.assertj:assertj-core:3.22.0'
    testImplementation 'org.mockito:mockito-core:4.3.1'
    testImplementation 'org.mockito:mockito-junit-jupiter:4.3.1'
    testImplementation 'org.springframework:spring-test:5.3.16'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
}

task integrationTest(type: Test) {
    useJUnitPlatform()
    testClassesDirs = sourceSets.integration.output.classesDirs
    classpath = sourceSets.integration.runtimeClasspath
    dependsOn test
}

processIntegrationResources {
    duplicatesStrategy DuplicatesStrategy.EXCLUDE
}

check.dependsOn integrationTest
